{
    "collab_server" : "",
    "contents" : "#' Report quantiles and probabilities from the fitted probability distributions\n#' \n#' Having fitted appropriate distributions to one or more expert's judgements\n#' individually using the \\code{\\link{fitdist}} command, use this command to\n#' get quantiles and probabilities from the fitted distributions\n#' \n#' \n#' @param fit An object of class \\code{elicitation}.\n#' @param quantiles A vector of desired quantiles for feedback. If this\n#' argument is left out, the default is to use the same quantiles that were\n#' elicited from the experts.\n#' @param values A vector of desired probabilities; desired values of a for\n#' reporting back fitted values of P(X<a). If this argument is left out, the\n#' default is to use the same values provided by the experts.\n#' @param dist If \\code{fit} contains judgements from multiple experts,\n#' \\code{dist} is distribution to be used for calculating probabilities and\n#' quantiles. Options are \\code{\"normal\"}, \\code{\"t\"}, \\code{\"gamma\"},\n#' \\code{\"lognormal\"}, \\code{\"logt\"}, \\code{\"beta\"}, or \\code{\"best\"}. The\n#' default option, \\code{\"best\"}, uses the best fitting distribution for each\n#' expert.\n#' @param ex If \\code{fit} contains judgements from multiple experts,\n#' specifying a value for \\code{ex} will select a single expert for feedback.\n#' Note that for a single expert, feedback is given for all suitable types of\n#' distribution, but for multiple experts, feedback is given for one type of\n#' distribution only.\n#' @param sf The number of significant figures to be displayed in the output.\n#' @return %% ~Describe the value returned %% If it is a LIST, use\n#' \n#' \\item{fitted.quantiles }{Fitted quantiles for each expert}\n#' \\item{fitted.probs }{Fitted probabilities for each expert}\n#' \\item{distributions}{The distribution used to calculate fitted\n#' probabilities/quantiles for each expert, if feedback is given for multiple\n#' experts.}\n#' @author Jeremy Oakley <j.oakley@@sheffield.ac.uk>\n#' @examples\n#' \\dontrun{\n#' # Two experts\n#' # Expert 1 states P(X<30)=0.25, P(X<40)=0.5, P(X<50)=0.75\n#' # Expert 2 states P(X<20)=0.25, P(X<25)=0.5, P(X<35)=0.75\n#' # Both experts state 0<X<100.\n#' \n#' v <- matrix(c(30, 40, 50, 20, 25, 35), 3, 2)\n#' p <- c(0.25, 0.5, 0.75)\n#' myfit <- fitdist(vals = v, probs = p, lower = 0, upper = 100)\n#' \n#' feedback(myfit)\n#' \n#' # Feedback P(X<60) and the tertiles\n#' feedback(myfit, values=60, quantiles=c(0.33,0.66))\n#' \n#' # Compare fitted tertiles for different distributions, expert 2 only\n#' feedback(myfit, quantiles=c(0.33,0.66), ex=2)\n#' }\n#' \n#' @export\nfeedback <- function(fit, quantiles =  NA, values = NA, dist= \"best\", ex = NA, sf = 3){\n  if(nrow(fit$vals)>1 & is.na(ex)==T){\n    return(feedbackgroup(fit, quantiles, values, dist, sf))\n  }\n  \n  if(nrow(fit$vals)>1 & is.na(ex)==F){\n    return(feedbacksingle(fit, quantiles, values, sf, ex))\n  }\n  \n  if(nrow(fit$vals)==1){\n    return(feedbacksingle(fit, quantiles, values, sf))\n  }\n}\n",
    "created" : 1467873479041.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1296246311",
    "id" : "D244FDA2",
    "lastKnownWriteTime" : 1470904660,
    "last_content_update" : 1470904660,
    "path" : "~/Dropbox/Research/R packages/SHELF/SHELF1.2.0.9001/R/feedback.R",
    "project_path" : "R/feedback.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}